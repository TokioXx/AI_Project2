package LegendarySannin;

import org.junit.Assert;
import org.junit.Test;

public class ChessTest {

    @Test
    public void chessTest1() {
        char[][] board = {
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', 'O', '-', '-', '-', '-' },
            { '-', '-', 'O', 'X', '-', '-', '-', '-' },
            { '-', 'O', 'X', 'X', 'X', 'O', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
        };

        new RationalAgent(1, 2).move(board);
        Assert.assertTrue(board[5][0] == 'X' || board[1][4] == 'X');
    }

    @Test
    public void chessTest2() {
        char[][] board = {
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', 'X', 'O', 'X', '-', '-', '-', '-' },
            { '-', '-', '-', 'O', 'O', '-', '-', '-' },
            { '-', '-', '-', 'X', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
        };

        new RationalAgent(1, 2).move(board);
        Assert.assertEquals(board[3][2], 'X');
    }

    @Test
    public void chessTest3() {
        char[][] board = {
            { '-', 'X', 'X', 'X', 'X', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', 'X', 'X', '-', 'O', 'O', '-', '-' },
            { '-', '-', 'O', 'X', 'O', 'O', '-', '-' },
            { '-', 'O', '-', 'X', '-', '-', '-', '-' },
            { '-', '-', 'O', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
        };

        new RationalAgent(2, 2).move(board);
        Assert.assertTrue(board[0][5] == 'O' || board[0][0] == 'O');
    }

    @Test
    public void chessTest4() {
        char[][] board = {
            { '-', 'X', 'X', 'X', 'X', '-', '-', '-' },
            { '-', 'X', 'X', 'X', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
            { '-', '-', '-', '-', '-', '-', '-', '-' },
        };

        new RationalAgent(1, 2).move(board);
        Assert.assertTrue(board[0][0] == 'X' || board[0][5] == 'X');
    }
}